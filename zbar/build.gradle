apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
    //#    versionCode 1
     //   versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets { main { jni.srcDirs = [] } }
    task ndkBuild(type: org.gradle.api.tasks.Exec, description:"build zbar") {
        Properties properties = new Properties();
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def ndkDir = properties.getProperty("ndk.dir")

        if(org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
            commandLine "$ndkDir/ndk-build.cmd", '-C', file("src/main/jni").absolutePath
        } else {
            commandLine "$ndkDir/ndk-build", '-C', file("src/main/jni").absolutePath
        }
    }

    task copyJniLibs(type: Copy) {
        from fileTree(dir: file('src/main/libs'), include: '**/*.so')
        into file('src/main/jniLibs')
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(ndkBuild, copyJniLibs)
    }

//    task copySo(type: Jar, description: 'create a jar archive of the native libs') {
//        destinationDir file("$buildDir/native-zbar")
//        baseName 'native-zbar'
//        from fileTree(dir: 'libs', include: '**/*.so')
//        into 'lib/'
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn(ndkBuild, copySo)
//    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
}
/*
task clearJar(type: Delete) {
    delete 'libs/java-zbar.jar'
}
task makeJar(type: org.gradle.api.tasks.bundling.Jar) {
    baseName "java-zbar"
    from('build/intermediates/classes/debug/net/sourceforge/zbar/')
    into('net/sourceforge/zbar')
    exclude('test/', 'BuildConfig.class', 'R.class')
    exclude{it.name.startsWith('R$');}
}

makeJar.dependsOn(clearJar, build)
*/